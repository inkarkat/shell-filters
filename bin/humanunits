#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Convert numbers in text into human-readable Ki / Mi / Gi / ... units.
IEC 2-exponent suffixes by default, use --to si for 10-exponent SI units (or
--to iec for one-letter IEC ones).
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[--to si|iec|iec-i] [--] FILE [...] [-?|-h|--help]'
    printf 'Usage: cat FILE [...] | %q %s\n' "$(basename "$1")" '[...]'
}
typeset -a toArg=(--to iec-i)
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --to)		toArg=("$1" "$2"); shift; shift;;
esac

convertToHumanUnits()
{
    # numfmt only converts leading numbers, only if they are followed by
    # whitespace, and tries to keep the existing width if there's whitespace in
    # front of the number. Anything after the number is skipped, so we need to
    # split up line(s) on each (non-alnum +) number. By matching non-alnum, we
    # accept prefixes like " or ( (even though numfmt does not), but don't match
    # inside "foobar3000". There still needs to be a whitespace after the
    # number, though, so "(3000)" is kept, but "(3000 bugs)" -> "(3K bugs)".
    # That single non-alnum and/or a single whitespace is kept on the original
    # line, any additional whitespace (usable for padding) and the number are
    # broken to the next one. So a single space means translation as-is, while
    # multiple spaces suggest keeping the width through padding if possible.
    # (If we put all whitespace on the line before the number, it could happen
    # that nothing would be left after the translation, and after reassembly
    # there would be no separation to the preceding text at all.)
    # To be able to reassemble the original line breaks, we convert existing
    # newlines into space (to maintain the whitespace necessary for numfmt to
    # accept it) + ^G (numfmt doesn't pass through ASCI 00 = NUL), and
    # retranslate afterwards.
    sed -e 's/$/ \d007/' -e 's/\([^[:alnum:][:space:]][[:space:]]\?\|[[:space:]]\)\([[:space:]]*[0-9]\+\)/\1\n\2/g' | \
	numfmt --invalid=ignore "${toArg[@]}" | \
	sed -e ':begin' -e 's/ \d007$//' -e t -e '$!N; s/\n//g; t begin'
}

eval "${*:+cat -- "$@" |}" convertToHumanUnits
