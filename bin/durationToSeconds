#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Convert matches of [HH:]MM:SS into seconds.
(Unless the text around the duration (with the duration itself represented by &)
matches SKIP&PATTERN.)
HELPTEXT
    printf 'Usage: cat FILE [...] | %q %s\n' "$(basename "$1")" '[-s|--skip SKIP&PATTERN [...]] [-?|-h|--help]'
}
skipPattern=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--skip|-s)	shift; skipPattern="${skipPattern}${skipPattern:+|}${1:?}"; shift;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printShortUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done

awk -F $'\n' \
    -v "skipPattern=${skipPattern//\\/\\\\}" \
'
function convert(duration,      n, tuples)
{
    n = split(duration, tuples, /:/)
    if (n == 2)
	return tuples[1] * 60 + tuples[2]
    else if (n == 3)
	return tuples[1] * 3600 + tuples[2] * 60 + tuples[3]
    else
	return duration
}
function shallowclone(target, source,      e)
{
    for (e in source) target[e] = source[e]
}
function join(n, list, seps,      i, result) {
    for (i = 1; i <= n; ++i) {
	result = result list[i] seps[i]
    }
    result = result list[++i]
    return result
}
{
    n = split($0, rest, /\<[[:digit:]]+(:[[:digit:]]{2}){1,2}\>/, durations)

    for (i = 1; i < n; ++i) {
	if (skipPattern != "") {
	    shallowclone(testDurations, durations)
	    testDurations[i] = "&"
	    if (join(n, rest, testDurations) ~ skipPattern) continue
	}

	durations[i] = convert(durations[i])
    }

    $0 = join(n, rest, durations)
    print
}
'
