#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Convert matches of [Ww ][Dd ][HH:]MM:SS into seconds.
(Unless the text around the duration (with the duration itself represented by &)
matches SKIP&PATTERN.)
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" '"[Ww ][Dd ][HH:]MM:SS" [...] [-?|-h|--help]'
    printf 'Usage: cat FILE [...] | %q %s\n' "$(basename "$1")" '[-s|--skip SKIP&PATTERN [...]]'
}
skipPattern=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--skip|-s)	shift; skipPattern="${skipPattern}${skipPattern:+|}${1:?}"; shift;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printShortUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done

awk -F $'\n' \
    -v "skipPattern=${skipPattern//\\/\\\\}" \
'
function convert(duration,      calendar, n, clock, days, weeks, result)
{
    n = split(gensub(/^.* /, "", 1, duration), clock, /:/)
    split(duration, calendar, / /)

    if (calendar[1] ~ /^[[:digit:]]+w$/) {
	weeks = substr(calendar[1], 1, length(calendar[1]) - 1)
	if (calendar[2] ~ /^[[:digit:]]+d$/) {
	    days = substr(calendar[2], 1, length(calendar[2]) - 1)
	}
    } else if (calendar[1] ~ /^[[:digit:]]+d$/) {
	days = substr(calendar[1], 1, length(calendar[1]) - 1)
    }
    result += weeks * 604800 + days * 86400

    if (n == 2)
	result += clock[n - 1] * 60 + clock[n]
    else if (n == 3)
	result += clock[n - 2] * 3600 + clock[n - 1] * 60 + clock[n]

    return (result > 0 ? result : duration)
}
function shallowclone(target, source,      e)
{
    for (e in source) target[e] = source[e]
}
function join(n, list, seps,      i, result) {
    for (i = 1; i <= n; ++i) {
	result = result list[i] seps[i]
    }
    result = result list[++i]
    return result
}
BEGIN {
    if (ARGC > 1) {
	for (i = 1; i < ARGC; ++i) {
	    print convert(ARGV[i])
	}
	exit 0
    }
}
{
    n = split($0, rest, /\<([[:digit:]]+w )?([[:digit:]]+d )?[[:digit:]]+(:[[:digit:]]{2}){1,2}\>/, durations)

    for (i = 1; i < n; ++i) {
	if (skipPattern != "") {
	    shallowclone(testDurations, durations)
	    testDurations[i] = "&"
	    if (join(n, rest, testDurations) ~ skipPattern) continue
	}

	durations[i] = convert(durations[i])
    }

    $0 = join(n, rest, durations)
    print
}
' "$@"
