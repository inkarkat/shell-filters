#!/bin/bash
set -o pipefail

printUsage()
{
    cat <<HELPTEXT
Convert runs of spaces to a single tab character and pipe this through
COMMAND(s), then re-columnate the result to align the columns with runs of
spaces.
HELPTEXT
    echo
    printf 'Usage: cat FILE [...] | %q %s\n' "$(basename "$1")" '-c|--command "COMMANDLINE" [-c ...] | [--] SIMPLECOMMAND [...]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '-i|--input FILESPEC [...] -c ... [-?|-h|--help]'
}

typeset -a spaceConverterArgs=()
isNeedEval=
typeset -a commands=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--input|-i)	shift; spaceConverterArgs+=("$1"); shift;;
	--command|-c)	shift; commands+=(${commands:+\|} "$1"); isNeedEval=t; shift;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
if [ $# -ne 0 ]; then
    if [ "$isNeedEval" ]; then
	# Combine --command and SIMPLECOMMAND; need to quote SIMPLECOMMAND to
	# undo the effects of eval.
	printf -v quotedSimpleCommand '%q ' "$@"
	commands+=(${commands:+\|} "${quotedSimpleCommand% }")
    else
	commands=("$@")
    fi
fi
if [ ${#commands[@]} -eq 0 ]; then
    echo 'ERROR: No COMMAND(s) specified; need to pass -c|--command "COMMANDLINE", or SIMPLECOMMAND.'
    echo
    printUsage "$0"
    exit 2
fi >&2

spaces2tab -- "${spaceConverterArgs[@]}" | \
    if [ "$isNeedEval" ]; then
	eval "${commands[@]}"
    else
	"${commands[@]}"
    fi | \
    column -s $'\t' -t --keep-empty-lines
