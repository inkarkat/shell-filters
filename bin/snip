#!/bin/bash

: ${SNIP_PRINTER:=cat}

printUsage()
{
    cat <<HELPTEXT
Insert snip formatting around each passed FILE / standard input.
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-n|--name NAME|--base-name|--absolute-name] FILE [...] [-?|-h|--help]'
    printf 'Usage: cat FILE | %q %s\n' "$(basename "$1")" '[-n|--name NAME]'
}
unset name
hasName=
typeset -a converter=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--base-name)	shift; converter=(basename --);;
	--absolute-name)
			shift; converter=(realpath --no-symlinks --);;
	--name|-n)	shift; name="$1"; hasName=t; shift;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done

before()
{
    printf ',----[ %s ]----\n' "$name"
}
after()
{
    printf '`------%s------\n' "${name//?/-}"
}

status=0
if [ $# -eq 0 ]; then
    if [ ${#converter[@]} -gt 0 ]; then
	echo >&2 'ERROR: Can only use -n|--name with standard input.'
	echo >&2
	printUsage "$0" >&2
	exit 2
    fi
    : ${name=input}
    before
    eval "$SNIP_PRINTER" || status=$?
    after
else
    for filespec
    do
	if [ ! "$hasName" ]; then
	    if [ ${#converter[@]} -gt 0 ]; then
		name="$("${converter[@]}" "$filespec")"
	    else
		name="$filespec"
	    fi
	fi

	before
	eval "$SNIP_PRINTER" "$filespec" || status=$?
	after
    done
fi
exit $status
