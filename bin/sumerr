#!/bin/bash

: ${SUMERR_COMMAND_JOINER=;}

printUsage()
{
    cat <<HELPTEXT
Execute COMMAND, then separately summarize the stderr output after COMMAND's
execution (and normal output).
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[--no-header] [-Y|--summary-only] -c|--command "COMMANDLINE" [-c ...] | [--] SIMPLECOMMAND [...] [-?|-h|--help]'
}

isHeader=t
isSummaryOnly=
commands=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--no-header)	shift; isHeader=;;
	--summary-only|-Y)
			shift; isSummaryOnly=t;;
	--command|-c)	shift; commands+="${commands:+ $SUMERR_COMMAND_JOINER }$1"; shift;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
if [ $# -ne 0 ]; then
    # Combine --command and SIMPLECOMMAND; need to quote SIMPLECOMMAND to
    # undo the effects of eval.
    printf -v quotedSimpleCommand '%q ' "$@"
    commands+="${commands:+ $SUMERR_COMMAND_JOINER }${quotedSimpleCommand% }"
fi
if [ -z "$commands" ]; then
    echo >&2 'ERROR: No COMMAND(s) specified; need to pass -c|--command "COMMANDLINE", or SIMPLECOMMAND.'
    exit 2
fi

TMPFILE="$(mktemp --tmpdir "$(basename -- "$0")-XXXXXX" 2>/dev/null || echo "${TMPDIR:-/tmp}/$(basename -- "$0").$$")"

typeset -ra sedHighlightArgs=(-e 's/.\+/[01;31m&[0m/')

finally()
{
    if [ -s "$TMPFILE" ]; then
	[ "$isHeader" ] && printf '\n\e[01;31m=== ERRORS ===\e[0m\n'
	if [ "$isSummaryOnly" ]; then
	    sed "${sedHighlightArgs[@]}" -- "$TMPFILE"
	else
	    cat -- "$TMPFILE"
	fi
    fi

    rm --force -- "$TMPFILE" 2>/dev/null
}
trap 'finally' EXIT

execute()
{
    eval "$commands"
}

if [ "$isSummaryOnly" ]; then
    execute 2>"$TMPFILE"
else
    execute 2> >(sed --unbuffered "${sedHighlightArgs[@]}" | tee -- "$TMPFILE")
fi
