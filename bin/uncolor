#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Remove ANSI escape sequences for ATTRIBUTE and/or COLOR selectively from the output.
HELPTEXT
    echo
    local attributeColorSyntax; attributeColorSyntax="$(colored --list-colors)" || exit 3
    printf 'Usage: %q %s %s\n' "$(basename "$1")" "--attributes|$attributeColorSyntax" '[...] -- FILE [...]'
    echo
    printf 'Usage: cat FILE [...] | %q [...] [ATTRIBUTE] [COLOR [COLOR]] [...]\n' "$(basename "$1")"
}

getSequence()
{
    local rawSequence; rawSequence="$(colored --get "$@" 2>/dev/null)" || return $?
    local sequence
    sequence="${rawSequence/#\[/}"
    sequence="${sequence/%m/}"
    printf %s "$sequence"
}

typeset -a sequences=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--)		break;;
	--attributes)	shift; sequences+=('[1-9]\|11\|21\|53\|4:3');;
	foreground|background)
			if ! sequences+=("$(getSequence "$1" "$2")"); then
			    printUsage "$0" >&2
			    exit 2
			fi
			shift; shift
			;;
	*)		if ! sequences+=("$(getSequence "$1")"); then
			    printUsage "$0" >&2
			    exit 2
			fi
			shift
			;;
    esac
done
if [ ${#sequences[@]} -eq 0 ]; then
    printUsage "$0" >&2
    exit 2
fi

typeset -a sedSequenceRemoval=()
for s in "${sequences[@]}"
do
    sedSequenceRemoval+=(-e "s#\\x1b\\[\\(${s}\\)m##g")   # Standalone sequence
    sedSequenceRemoval+=(-e "s#\\(\\x1b\\[[0-9:;]*\\);\\(${s}\\)m#\\1m#g")	# Sequence at the end of larger sequence
    sedSequenceRemoval+=(-e "s#\\x1b\\[\\(${s}\\);\\([0-9:;]*m\\)#[\\2#g")	# Sequence at the start of larger sequence
    sedSequenceRemoval+=(-e "s#\\(\\x1b\\[[0-9:;]*\\);\\(${s}\\);\\([0-9:;]*m\\)#\\1;\\3#g")	# Sequence in the middle of larger sequence
done

exec sed -e ':restart' \
    -e 's#\(\x1b\[\([0-9:;]\+\);\)\?0\+\([1-9][0-9:;]*m\)#\1\3#g' \
    "${sedSequenceRemoval[@]}" \
    -e 't restart' \
    "$@"
