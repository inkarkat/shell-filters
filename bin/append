#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Capture output from stdin, pipe that through COMMAND and output that output
afterwards, too.
HELPTEXT
printf 'Usage: %q %s\n' "$(basename "$1")" '[-c|--command "COMMANDLINE" | [--] SIMPLECOMMAND [...]] [...] [-?|-h|--help]'
printf 'Example: diff -u orig new | %q diffstat -C\n' "$(basename -- "$1")"
}

isNeedEval=
typeset -a commands=()
while [ $# -ne 0 ]
do
    case "$1" in
	--command|-c)	shift; commands+=(${commands:+;} "$1"); isNeedEval=t; shift;;
	--)		shift; break;;
	*)		break;;
    esac
done
if [ $# -ne 0 ]; then
    if [ "$isNeedEval" ]; then
	# Combine --command and SIMPLECOMMAND; need to quote SIMPLECOMMAND to
	# undo the effects of eval.
	commands+=(${commands:+;} $(printf '%q ' "$@"))
    else
	commands=("$@")
    fi
fi

TMPFILE=$(mktemp --tmpdir "$(basename -- "$0")-XXXXXX" 2>/dev/null || echo "${TEMP:-/tmp}/$(basename -- "$0").$$")

finally()
{
    status=0
    if [ -s "$TMPFILE" ]; then
	cat -- "$TMPFILE" | \
	    if [ "$isNeedEval" ]; then
		eval "${commands[@]}"
	    else
		"${commands[@]}"
	    fi
	    status=$?
    fi
    rm -f -- "$TMPFILE" 2>/dev/null
    exit $status
}
trap 'finally' EXIT

tee -- "$TMPFILE"
