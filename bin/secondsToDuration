#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Treat any integer in the input as seconds and convert them into [[HH:]MM:]SS.
(Unless the text around the integer (with the integer itself represented by &)
matches SKIP&PATTERN.)
HELPTEXT
    printf 'Usage: cat FILE [...] | %q %s\n' "$(basename "$1")" '[-s|--skip SKIP&PATTERN [...]] [-?|-h|--help]'
}
skipPattern=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--skip|-s)	shift; skipPattern="${skipPattern}${skipPattern:+|}${1:?}"; shift;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printShortUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done

awk -F $'\n' \
    -v "skipPattern=${skipPattern//\\/\\\\}" \
'
function convert(seconds,      hours, minutes)
{
    hours = int(seconds / 3600)
    seconds = seconds - (3600 * hours)
    minutes = int(seconds / 60)
    seconds = seconds - (60 * minutes)

    return (hours > 0 ? hours ":" : "") (minutes > 0 ? sprintf("%02d", minutes) ":" : "") (hours > 0 || minutes > 0 ? sprintf("%02d", seconds) : seconds)
}
function shallowclone(target, source,      e)
{
    for (e in source) target[e] = source[e]
}
function join(n, list, seps,      i, result) {
    for (i = 1; i <= n; ++i) {
	result = result list[i] seps[i]
    }
    result = result list[++i]
    return result
}
{
    n = split($0, rest, /\<[[:digit:]]+\>/, numbers)
    for (i = 1; i < n; ++i) {
	if (skipPattern != "") {
	    shallowclone(testNumbers, numbers)
	    testNumbers[i] = "&"
	    if (join(n, rest, testNumbers) ~ skipPattern) continue
	}

	numbers[i] = convert(numbers[i])
    }

    $0 = join(n, rest, numbers)
    print
}
'
