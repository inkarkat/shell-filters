#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Capture output from stdin, pipe that through COMMAND and output that, and then
the original output.
HELPTEXT
printf 'Usage: cat FILE [...] | %q %s\n' "$(basename "$1")" '-c|--command "COMMANDLINE" [-c ...] | [--] SIMPLECOMMAND [...] [-?|-h|--help]'
printf 'Example: diff -u orig new | %q diffstat -C\n' "$(basename -- "$1")"
}

typeset -a commands=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--command|-c)	shift; commands+=(${commands:+;} "$1"); shift;;
	--)		shift; break;;
	-*)		    { echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
if [ $# -ne 0 ]; then
    # Combine --command and SIMPLECOMMAND; need to quote SIMPLECOMMAND to
    # undo the effects of eval.
    printf -v quotedSimpleCommand '%q ' "$@"
    commands+=(${commands:+;} "${quotedSimpleCommand% }")
fi
if [ ${#commands[@]} -eq 0 ]; then
    echo >&2 'ERROR: No COMMAND(s) specified; need to pass -c|--command "COMMANDLINE", or SIMPLECOMMAND.'
    exit 2
fi

TMPFILE="$(mktemp --tmpdir "$(basename -- "$0")-XXXXXX" 2>/dev/null || echo "${TMPDIR:-/tmp}/$(basename -- "$0").$$")"

finally()
{
    status=0
    if [ -s "$TMPFILE" ]; then
	cat -- "$TMPFILE" | \
	    eval "${commands[@]}"; status=$?
	cat -- "$TMPFILE"
    fi
    rm -f -- "$TMPFILE" 2>/dev/null
    exit $status
}
trap 'finally' EXIT

cat > "$TMPFILE"
